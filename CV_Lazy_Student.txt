#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
ll combination(ll a,ll b){
    ll i,numerator=1,denomenator=1,result;
    for(i=1;i<=b;i++)
    {
        denomenator*=i;
        numerator*=(a-(i-1));
    }
    result=numerator/denomenator;
    return result;
}
ll GCD(ll a,ll b)
{
    ll t;
    while(1)
    {
        t=a%b;
        if(t==0)
            return b;
        if(t!=0)
        {
            a=b;
            b=t;

        }
    }
}
ll mulInv(ll a)
{
    ll b,i,mod=1000000007;
    for(i=1;i<mod;i++)
    {
         if((i*mod+1)%a==0){
            b=(i*mod +1)/a;
            break;
        }
    }
return b;
}
int main()
{
    ll t;
    cin>>t;
    while(t--)
    {
        ll number_question,learnt,chosen;
        ll ways,waysPas,waysFail,unknown,p,q,mod=1000000007;
        cin>>number_question>>learnt>>chosen;
        unknown=number_question-learnt;
        ways=combination(number_question,chosen);
        waysFail=combination(unknown,chosen);
        p=ways-waysFail;
        q=ways;
        ll gc=GCD(p,q);
        if(gc!=1){
            p=p/gc;
            q=q/gc;
        }
        waysPas=(p*mulInv(q))%1000000007;
        cout<<waysPas;
}
}
